// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`celebrate() validates the entire request (params, query, body) with full validatate mode 1`] = `
Map {
  "params" => [ValidationError: "id" must be a string],
  "query" => [ValidationError: "end" is not allowed],
  "body" => [ValidationError: "role" must be a number],
}
`;

exports[`errors() honors the configuration options 1`] = `
Object {
  "error": "Conflict",
  "message": "celebrate request validation failed",
  "statusCode": 409,
  "validation": Object {
    "query": Object {
      "keys": Array [
        "role",
      ],
      "message": "\\"role\\" must be larger than or equal to 4",
      "source": "query",
    },
  },
}
`;

exports[`errors() includes more information when abourtEarly is false 1`] = `
Object {
  "error": "Bad Request",
  "message": "celebrate request validation failed",
  "statusCode": 400,
  "validation": Object {
    "query": Object {
      "keys": Array [
        "role",
        "name",
      ],
      "message": "\\"role\\" must be larger than or equal to 4. \\"name\\" is required",
      "source": "query",
    },
  },
}
`;

exports[`errors() responds with a joi error from celebrate middleware 1`] = `
Object {
  "error": "Bad Request",
  "message": "celebrate request validation failed",
  "statusCode": 400,
  "validation": Object {
    "query": Object {
      "keys": Array [
        "role",
      ],
      "message": "\\"role\\" must be larger than or equal to 4",
      "source": "query",
    },
  },
}
`;
